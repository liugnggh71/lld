<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="bash.xsl"?>
<bash_codes xmlns:xi="http://www.w3.org/2001/XInclude">
   <bash_code name="lld"
              subdir="dba_code/bin"
              symbolic_link="F"
              xml:base="code/bash/lld.xml">
      <header>
         <shebang>/bin/sh</shebang>
         <desc>List sub-directory under current directory</desc>
      </header>
      <run desc="List sub-directory" indent="1">ls -l ${1:-.} | grep ^d</run>
   </bash_code>
   <bash_code name="llf"
              subdir="dba_code/bin"
              symbolic_link="F"
              xml:base="code/bash/llf.xml">
      <header>
         <shebang>/bin/sh</shebang>
         <desc>List files under current directory</desc>
      </header>
      <run desc="List files" indent="1">ls -l ${1:-.} | grep ^-</run>
   </bash_code>
   <bash_code name="lll"
              subdir="dba_code/bin"
              symbolic_link="L"
              xml:base="code/bash/lll.xml">
      <header>
         <shebang>/bin/sh</shebang>
         <desc>List sub-directory under current directory</desc>
      </header>
      <run desc="List symbolic link" indent="1">ls -l ${1:-.} | grep ^l</run>
   </bash_code>
   <bash_code name="b1f" subdir="dba_code/bin" xml:base="code/bash/b1f.xml">
      <header>
         <shebang>/bin/sh</shebang>
         <desc>Make a local backup of a single file</desc>
      </header>
      <if_block>
         <test>
            <operand type="variable">#</operand>
            <operator>NumberLess</operator>
            <operand type="arithmetic">1</operand>
         </test>
         <steps indent="1">
            <echo position="both" wrapper="#">USAGE: b1f file_name</echo>
            <exit>11</exit>
         </steps>
      </if_block>
      <full_code>mkdir -p bk
cp -p ${1} bk/${1}.$(date +%Y_%m_%d_%H_%M_%S)
ls -ltr bk | tail -n 10

    </full_code>
   </bash_code>
   <bash_code name="lnc" subdir="dba_code/bin" xml:base="code/bash/lnc.xml">
      <header>
         <shebang>/bin/sh</shebang>
         <desc>Generate symbolic creation code</desc>
      </header>
      <full_code>echo "" &gt; ln_s.sh
while IFS= read -r line
do
  ## Debugging lines
#  echo "$line"
  full_file=$(echo "$line" | cut -d '&gt;' -f 2)
#  echo $full_file
  short_cut=$(echo "$line" | cut -d '-' -f 1 | rev | cut -d ' ' -f 2 | rev)
#  echo $short_cut
  echo ln -s $full_file $short_cut
  echo ln -s $full_file $short_cut &gt;&gt; ln_s.sh
#  ln -s $full_file $short_cut
done &lt;&lt; ( ls -l | grep ^l )

    </full_code>
   </bash_code>
   <bash_code name="SAX" subdir="dba_code/bin" xml:base="code/bash/SAX.xml">
      <header>
         <shebang>/bin/sh</shebang>
         <desc>Run Saxon XSLT transformer with 2 parameter</desc>
      </header>
      <full_code>cat &lt;&lt; 'EOF'
======================================================
java net.sf.saxon.Transform  -s:${1} -a:on -o:${2} -xi:on
======================================================
EOF
echo java net.sf.saxon.Transform  -s:${1} -a:on -o:${2} -xi:on
java net.sf.saxon.Transform  -s:${1} -a:on -xi:on -o:${2}

    </full_code>
   </bash_code>
   <bash_code name="SAXON" subdir="dba_code/bin" xml:base="code/bash/SAXON.xml">
      <header>
         <shebang>/bin/sh</shebang>
         <desc>Run Saxon XSLT transformer with 3 parameters</desc>
      </header>
      <full_code>cat &lt;&lt; 'EOF'
======================================================
java net.sf.saxon.Transform  -s:${1} -xsl:${2} -o:${3} -xi:on
======================================================
EOF
echo java net.sf.saxon.Transform  -s:${1} -xsl:${2} -o:${3} -xi:on
java net.sf.saxon.Transform  -s:${1} -xsl:${2} -o:${3} -xi:on

    </full_code>
   </bash_code>
   <bash_code name="XXX" subdir="dba_code/bin" xml:base="code/bash/XXX.xml">
      <header>
         <shebang>/bin/sh</shebang>
         <desc>Run Saxon XSLT transformer with 1 parameter</desc>
      </header>
      <full_code>cat &lt;&lt; 'EOF'
======================================================
java net.sf.saxon.Transform  -s:${1} -a:on -o:/dev/null -xi:on
======================================================
EOF
echo java net.sf.saxon.Transform  -s:${1} -a:on -o:/dev/null -xi:on
java net.sf.saxon.Transform -s:${1} -a:on -o:/dev/null -xi:on

    </full_code>
   </bash_code>
</bash_codes>
